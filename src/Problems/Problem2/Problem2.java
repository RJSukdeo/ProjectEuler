package Problems.Problem2;

import java.util.ArrayList;
import java.util.List;

// Question
// Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
//
// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
//
// By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

public class Problem2 {

    public static void main(String[] args) {
        double max = 4 * (Math.pow(10,6));
        List<Integer> fibNumbers = new ArrayList<>();
        fibNumbers.add(1);
        fibNumbers.add(2);
        int sumEven = 2;
        while (true) {
            int nextElement = fibNumbers.get(fibNumbers.size() - 1) + fibNumbers.get(fibNumbers.size() - 2);
            if (nextElement > max) {
                break;
            }
            if (nextElement % 2 == 0) {
                sumEven += nextElement;
            }
            fibNumbers.add(nextElement);
        }
        System.out.println("Sum of even valued fibonacci numbers: " + sumEven);
    }

}
